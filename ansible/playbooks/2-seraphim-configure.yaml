---
- name: Configure seraphim cluster
  hosts: bootstrap
  connection: local
  tasks:
    - name: Generate talosconfig
      ansible.builtin.command: >
        talosctl gen config seraphim https://seraphim.int.scarey.me:6443
          --with-secrets {{ inventory_dir }}/../secrets/talos.yaml
          --output-types talosconfig
          --output {{ inventory_dir }}/../.talos/config
          --force
      changed_when: true

    - name: Download admin kubeconfig
      ansible.builtin.command: >
        talosctl --nodes {{ ansible_host }} --endpoints {{ ansible_host }} kubeconfig {{ inventory_dir }}/../.kube/config --force
      changed_when: true

    - name: Change talosconfig permissions
      ansible.builtin.file:
        path: "{{ inventory_dir }}/../.talos/config"
        mode: '0600'

    - name: Change kubeconfig permissions
      ansible.builtin.file:
        path: "{{ inventory_dir }}/../.kube/config"
        mode: '0600'

- name: Wait for running nodes
  hosts: seraphim
  connection: local
  tasks:
    - name: Wait for running nodes
      ansible.builtin.command: "talosctl --nodes {{ ansible_host }} --endpoints {{ ansible_host }} get nodestatus -o json"
      changed_when: true
      register: cmd
      until: (cmd.stdout | from_json).metadata.phase == "running"

- name: Deploy initial services
  hosts: bootstrap
  connection: local
  tasks:
    # TODO: Manage with helm
    - name: Deploy Cilium
      kubernetes.core.helm:
        name: cilium
        namespace: kube-system
        chart_ref: cilium
        chart_version: 1.16.5
        chart_repo_url: "https://helm.cilium.io"
        values:
          ipam:
            mode: kubernetes
          kubeProxyReplacement: true
          securityContext:
            capabilities:
              ciliumAgent: [CHOWN, KILL, NET_ADMIN, NET_RAW, IPC_LOCK, SYS_ADMIN, SYS_RESOURCE, DAC_OVERRIDE, FOWNER, SETGID, SETUID]
              cleanCiliumState: [NET_ADMIN, SYS_ADMIN, SYS_RESOURCE]
          cgroup:
            autoMount:
              enabled: false
            hostRoot: /sys/fs/cgroup
          k8sServiceHost: localhost
          k8sServicePort: 7445
          k8sClientRateLimit:
            qps: 10
            burst: 20
          l2announcements:
            enabled: true
          gatewayAPI:
            enabled: true
          externalIPs:
            enabled: true

    # TODO: Move this step to the talos node configuration
    - name: Install Gateway API CRDs
      kubernetes.core.k8s:
        definition: >
          {{ lookup('ansible.builtin.url', 'https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.2.0/standard-install.yaml', split_lines=False)
            | from_yaml_all | list }}
        state: present

    - name: Deploy Argo CD
      kubernetes.core.helm:
        name: argocd
        namespace: argocd
        chart_ref: argo-cd
        chart_version: 7.7.11
        chart_repo_url: "https://argoproj.github.io/argo-helm"
        create_namespace: true

    - name: Deploy Argo CD apps
      kubernetes.core.helm:
        name: argocd
        chart_ref: ../../apps/argocd
        release_namespace: argocd
        dependency_update: true
