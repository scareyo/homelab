---
- name: Configure seraphim cluster
  hosts: bootstrap
  connection: local
  tasks:
    - name: Generate talosconfig
      ansible.builtin.command: >
        talosctl gen config seraphim https://seraphim.int.scarey.me:6443
          --with-secrets {{ inventory_dir }}/../secrets/talos.yaml
          --output-types talosconfig
          --output {{ inventory_dir }}/../.talos/config
          --force
      changed_when: true

    - name: Download admin kubeconfig
      ansible.builtin.command: >
        talosctl --nodes {{ talos_host }} --endpoints {{ talos_host }} kubeconfig {{ inventory_dir }}/../.kube/config --force
      changed_when: true

    - name: Change talosconfig permissions
      ansible.builtin.file:
        path: "{{ inventory_dir }}/../.talos/config"
        mode: '0600'

    - name: Change kubeconfig permissions
      ansible.builtin.file:
        path: "{{ inventory_dir }}/../.kube/config"
        mode: '0600'

- name: Deploy initial services
  hosts: bootstrap
  connection: local
  vars:
    secrets: "{{ lookup('infisical.vault.read_secrets', env_slug='prod', project_id='64853e11f7a9ba1c4ac21cfd', path='/') | items2dict }}"
  tasks:
    - name: Install Cilium
      kubernetes.core.helm:
        name: cilium
        chart_ref: cilium
        chart_version: 1.16.5
        chart_repo_url: "https://helm.cilium.io"
        release_namespace: kube-system
        release_values: "{{ (lookup('file', '{{ inventory_dir }}/../seraphim/system/cilium/values.yaml') | from_yaml) }}"

    - name: Wait for healthy cluster
      ansible.builtin.command: "talosctl --nodes {{ talos_host }} --endpoints {{ talos_host }} health"
      changed_when: false

    - name: Install Argo CD
      kubernetes.core.helm:
        name: argocd
        chart_ref: argo-cd
        chart_version: 7.7.13
        chart_repo_url: "https://argoproj.github.io/argo-helm"
        release_namespace: argocd
        create_namespace: true
        release_values: "{{ (lookup('file', '{{ inventory_dir }}/../seraphim/system/argocd/values.yaml') | from_yaml) }}"

    - name: Apply Argo CD system application project
      kubernetes.core.k8s:
        state: present
        definition: "{{ (lookup('file', '{{ inventory_dir }}/../seraphim/system/argocd/system-appproject.yaml') | from_yaml) }}"

    - name: Bootstrap Argo CD
      kubernetes.core.k8s:
        state: present
        definition: "{{ (lookup('file', '{{ inventory_dir }}/../seraphim/system/argocd/argocd-application.yaml') | from_yaml) }}"

    - name: Create external-secrets namespace
      kubernetes.core.k8s:
        name: external-secrets
        api_version: v1
        kind: Namespace
        state: present

    - name: Create Infisical secret
      kubernetes.core.k8s:
        state: present
        api_version: v1
        kind: Secret
        namespace: external-secrets
        name: infisical-credentials
        definition:
          type: Opaque
          stringData:
            clientId: "{{ secrets.INFISICAL_CLIENT_ID }}"
            clientSecret: "{{ secrets.INFISICAL_CLIENT_SECRET }}"
