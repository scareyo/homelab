# Playbook: Provision Seraphim cluster machines
#   - Install Talos Linux on bare-metal MS-01 servers
#   - Create a Talos Linux cluster with Omni
---
- name: Provision Cloud Machines
  hosts: cloud
  connection: local
  tasks:
    - name: Create Zeus
      hetzner.hcloud.server:
        name: zeus
        api_token: "{{ hcloud_api_token }}"
        server_type: cpx11
        image: "318785011"
        location: ash
        state: started

- name: Get MS-01 machine status
  hosts: ms01
  connection: local
  environment:
    OMNI_ENDPOINT: "{{ omni_endpoint }}"
    OMNI_SERVICE_ACCOUNT_KEY: "{{ omni_service_account_key }}"
  tasks:
    - name: Get machine status
      ansible.builtin.shell: |
        set -o pipefail
        omnictl get machinestatus -o yaml | yq 'select(.spec.network.hostname == "{{ inventory_hostname | quote }}") | .metadata.phase'
      changed_when: false
      register: cmd

    - name: Set machine status fact
      ansible.builtin.set_fact:
        omni_status: "{{ cmd.stdout }}"

- name: Run PXE server
  hosts: ms01
  connection: local
  run_once: true
  roles:
    - role: pxe
      when: omni_status == ''

- name: Boot machines to PXE
  hosts: ms01
  connection: local
  environment:
    AMTCLI_USERNAME: "{{ amt_username }}"
    AMTCLI_PASSWORD: "{{ amt_password }}"
  tasks:
    - name: Get AMT info
      ansible.builtin.shell: |
        set -e -o pipefail
        amtcli info {{ amt_host }} | yq .state
      changed_when: false
      register: cmd
      retries: 5
      until: cmd.stdout == 'Off'
      when: omni_status == ''

    - name: Set hosts to boot from PXE
      ansible.builtin.command: "amtcli boot pxe {{ amt_host }}"
      changed_when: true
      register: cmd
      retries: 5
      until: cmd.rc == 0
      when: omni_status == ''

    - name: Start hosts
      ansible.builtin.command: "amtcli on {{ amt_host }}"
      changed_when: true
      register: cmd
      retries: 5
      until: cmd.rc == 0
      when: omni_status == ''

- name: Wait for all machines to be running
  hosts: seraphim
  connection: local
  environment:
    OMNI_ENDPOINT: "{{ omni_endpoint }}"
    OMNI_SERVICE_ACCOUNT_KEY: "{{ omni_service_account_key }}"
  tasks:
    - name: Get machine status
      ansible.builtin.shell: |
        set -o pipefail
        omnictl get machinestatus -o yaml | yq 'select(.spec.network.hostname == "{{ inventory_hostname | quote }}") | .metadata.phase'
      register: cmd
      retries: 24
      changed_when: false
      failed_when: cmd.stdout != 'running'

- name: Configure Seraphim
  hosts: seraphim
  connection: local
  run_once: true
  roles:
    - role: omni
      vars:
        omni_talos_version: "{{ talos_version }}"
        omni_kubernetes_version: "{{ kubernetes_version }}"
  tasks:
    - name: Get a talosconfig
      ansible.builtin.command: "omnictl talosconfig -f -c {{ omni_cluster_name }} {{ inventory_dir }}/../.talos/config"
      changed_when: true

    - name: Get a kubeconfig
      ansible.builtin.command: "omnictl kubeconfig -f -c {{ omni_cluster_name }} {{ inventory_dir }}/../.kube/config"
      changed_when: true

    - name: Create External Secrets namespace
      kubernetes.core.k8s:
        name: external-secrets
        api_version: v1
        kind: Namespace
        state: present

    - name: Add Infisical secret
      kubernetes.core.k8s:
        name: infisical-credentials
        namespace: external-secrets
        api_version: v1
        kind: Secret
        definition:
          stringData:
            clientId: "{{ infisical_client_id }}"
            clientSecret: "{{ infisical_client_secret }}"
        state: present

    - name: Install Flux Operator
      kubernetes.core.helm:
        name: flux-operator
        chart_ref: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-operator
        chart_version: 0.28.0
        release_namespace: flux-system
        create_namespace: true

    - name: Add FluxInstance
      kubernetes.core.k8s:
        definition: "{{ lookup('kubernetes.core.kustomize', dir=inventory_dir + '/../k8s/infrastructure/configs/fluxcd') }}"
