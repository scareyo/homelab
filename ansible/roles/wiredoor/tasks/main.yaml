---
- name: Check mandatory variables are defined
  ansible.builtin.assert:
    that:
      - wiredoor_admin_email is defined
      - wiredoor_admin_password is defined
      - wiredoor_vpn_host is defined
      - wiredoor_vpn_subnet is defined

- name: Ensure podman is installed
  become: true
  package:
    name: podman
    state: present

- name: Create Wiredoor network
  containers.podman.podman_network:
    name: wiredoor
    state: quadlet

- name: Create Wiredoor container
  containers.podman.podman_container:
    name: wiredoor
    state: quadlet
    image: "ghcr.io/wiredoor/wiredoor:v{{ wiredoor_version }}"
    cap_add:
      - NET_ADMIN
    env:
      ADMIN_EMAIL: "{{ wiredoor_admin_email }}"
      ADMIN_PASSWORD: "{{ wiredoor_admin_password }}"
      VPN_HOST: "{{ wiredoor_vpn_host }}"
      VPN_PORT: "{{ wiredoor_vpn_port }}"
      VPN_SUBNET: "{{ wiredoor_vpn_subnet }}"
      TCP_SERVICES_PORT_RANGE: "{{ wiredoor_port_range }}"
      TZ: "{{ wiredoor_timezone }}"
      OAUTH2_PROXY_PROVIDER: "{{ wiredoor_oauth2_provider }}"
      OAUTH2_PROXY_CLIENT_ID: "{{ wiredoor_oauth2_client_id }}"
      OAUTH2_PROXY_CLIENT_SECRET: "{{ wiredoor_oauth2_client_secret }}"
    volume:
      - wiredoor-data:/data
      - wiredoor-certbot:/etc/letsencrypt
      - wiredoor-logs:/var/log/nginx
    ports:
      - 80:80/tcp
      - 443:443/tcp
      - "{{ wiredoor_vpn_port }}:{{ wiredoor_vpn_port }}/udp"
      - "{{ wiredoor_port_range }}:{{ wiredoor_port_range }}/tcp"
      - "{{ wiredoor_port_range }}:{{ wiredoor_port_range }}/udp"
    sysctl:
      net.ipv4.ip_forward: 1
      net.ipv4.ip_unprivileged_port_start: 80
    network:
      - wiredoor.network

- name: Create CrowdSec container
  containers.podman.podman_container:
    name: crowdsec
    state: quadlet
    image: docker.io/crowdsecurity/crowdsec:latest
    volumes:
      - crowdsec-data:/var/lib/crowdsec/data/
      - wiredoor-logs:/var/log/nginx:ro
      - ./../../../acquis.yaml:/etc/crowdsec/acquis.yaml
    env:
      COLLECTIONS: "crowdsecurity/nginx"
      TZ: "{{ wiredoor_timezone }}"
      GID: "${GID-1000}"
    ports:
      - "127.0.0.1:8080:8080"
    #healthcheck:
    #  test: ["CMD", "cscli", "lapi", "status"]
    #  interval: 15s
    #  timeout: 10s
    #  retries: 4
    #  start_period: 30s
    network:
      - wiredoor.network

- name: Create acquis.yaml
  ansible.builtin.copy:
    dest: ~/acquis.yaml
    content: |
      filenames:
        - /var/log/nginx/*/access.log
        - /var/log/nginx/access.log
      labels:
        type: nginx

- name: Enable linger for user
  become: true
  ansible.builtin.command:
    cmd: "loginctl enable-linger {{ ansible_user_id }}"
    creates: "/var/lib/systemd/linger/{{ ansible_user_id }}"

- name: Start Wiredoor
  ansible.builtin.systemd_service:
    name: wiredoor
    enabled: true
    daemon_reload: true
    state: started
    scope: user

- name: Start CrowdSec
  ansible.builtin.systemd_service:
    name: crowdsec
    enabled: true
    daemon_reload: true
    state: started
    scope: user
