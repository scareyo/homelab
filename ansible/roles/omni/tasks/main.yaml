---
- name: 'Check mandatory variables are defined'
  ansible.builtin.assert:
    that:
      - omni_talos_version is defined
      - omni_kubernetes_version is defined
      - omni_cluster_name is defined
      - omni_bws_access_token is defined

- name: Get machine status
  ansible.builtin.shell: |-
    set -o pipefail;
    omnictl get machinestatus -o yaml | yq -o json -I 0 'select(.spec.network.hostname == "{{ item }}") |
    {
      "id": .metadata.id,
      "name": "{{ item }}",
      "disk": "{{ hostvars[item].osdisk | default('') | quote }}",
      "groups": {{ hostvars[item].group_names | to_json }},
      "platform": .spec.platformmetadata.platform
    }'
  changed_when: false
  loop: "{{ groups[omni_cluster_name] }}"
  register: output

- name: Set machine status fact
  ansible.builtin.set_fact:
    machines: >
      {{ machines | default([]) + [item.stdout | from_json] }}
  with_items: "{{ output.results }}"

- name: Generate cluster definition
  ansible.builtin.template:
    src: cluster.yaml.j2
    dest: "{{ role_path }}/files/data/cluster.yaml"
    mode: "0600"

- name: Validate cluster definition
  ansible.builtin.command: "omnictl cluster template validate -f {{ role_path }}/files/data/cluster.yaml"
  changed_when: false

- name: Create cluster
  ansible.builtin.command: "omnictl cluster template sync -f {{ role_path }}/files/data/cluster.yaml"
  changed_when: true

- name: Wait for healthy cluster
  ansible.builtin.command: "omnictl cluster template status -f {{ role_path }}/files/data/cluster.yaml"
  changed_when: false

- name: Configure Kubernetes service account
  ansible.builtin.command: "omnictl kubeconfig --force --service-account -c {{ omni_cluster_name }} --user ansible {{ role_path }}/files/data/kubeconfig"
  changed_when: false

- name: Create External Secrets namespace
  kubernetes.core.k8s:
    name: external-secrets
    api_version: v1
    kind: Namespace
    state: present

- name: Add Bitwarden Secrets token
  kubernetes.core.k8s:
    name: bws-access-token
    namespace: external-secrets
    api_version: v1
    kind: Secret
    definition:
      stringData:
        token: "{{ omni_bws_access_token }}"
    state: present

- name: Install Flux Operator
  kubernetes.core.helm:
    name: flux-operator
    chart_ref: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-operator
    release_namespace: flux-system
    create_namespace: true
    kubeconfig: "{{ role_path }}/files/data/kubeconfig"

- name: Bootstrap Flux
  kubernetes.core.k8s:
    state: present
    src: https://raw.githubusercontent.com/scareyo/homelab/refs/heads/main/infrastructure/configs/flux.yaml
    kubeconfig: "{{ role_path }}/files/data/kubeconfig"
