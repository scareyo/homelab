---
- name: Bootstrap cluster
  vars:
    talosconfig: "--talosconfig {{ cozystack_talosconfig }}"
    node_endpoint: "-e {{ host }} -n {{ host }}"
    node_file: "nodes/{{ inventory_hostname }}.yaml"
  block:
    - name: Generate talosconfig
      ansible.builtin.command:
        cmd: >
          talosctl gen config
            --with-secrets secrets.yaml
            --output-types talosconfig
            --output {{ cozystack_talosconfig }}
            --force
            seraphim https://api.vegapunk.cloud:6443
        chdir: "{{ cozystack_cluster_dir }}"
      changed_when: true

    - name: Check if machines are running
      ansible.builtin.shell:
        cmd: |
          set -e -o pipefail
          test $(talm {{ node_endpoint }} get machinestatus -o yaml -i {{ talosconfig }} | yq '.metadata.phase') == "running"
        chdir: "{{ cozystack_cluster_dir }}"
      changed_when: false
      retries: 60
      any_errors_fatal: true

    - name: Template control plane configurations
      ansible.builtin.shell:
        cmd: "talm {{ node_endpoint }} template -i -t templates/controlplane.yaml {{ talosconfig }} > {{ node_file }}"
        chdir: "{{ cozystack_cluster_dir }}"
      changed_when: true
      when: cozystack_node_type == "control"

    - name: Template worker configurations
      ansible.builtin.shell:
        cmd: "talm {{ node_endpoint }} template -i -t templates/worker.yaml {{ talosconfig }} > {{ node_file }}"
        chdir: "{{ cozystack_cluster_dir }}"
      changed_when: true
      when: cozystack_node_type == "worker"

    - name: Apply node configurations
      ansible.builtin.command:
        cmd: "talm -f {{ node_file }} apply -i {{ talosconfig }}"
        chdir: "{{ cozystack_cluster_dir }}"
      changed_when: true

    - name: Check that reboot has completed
      ansible.builtin.shell:
        cmd: |
          set -e -o pipefail
          test $(talm -f {{ node_file }} get machinestatus -o yaml {{ talosconfig }} | yq '.metadata.phase') == "running"
        chdir: "{{ cozystack_cluster_dir }}"
      changed_when: false
      retries: 60
      any_errors_fatal: true
      when: cozystack_node_type == "control"

    - name: Bootstrap cluster
      ansible.builtin.command:
        cmd: "talm -f {{ node_file }} bootstrap {{ talosconfig }}"
        chdir: "{{ cozystack_cluster_dir }}"
      changed_when: true
      run_once: true
      when: cozystack_node_type == "control"

    - name: Generate kubeconfig
      ansible.builtin.command:
        cmd: "talm -f {{ node_file }} kubeconfig {{ cozystack_kubeconfig }} {{ talosconfig }}"
        chdir: "{{ cozystack_cluster_dir }}"
      changed_when: true
      run_once: true
      when: cozystack_node_type == "control"

    - name: Wait for nodes to be ready
      kubernetes.core.k8s_info:
        api_version: v1
        name: "{{ inventory_hostname }}"
        kind: Node
        wait: true
        wait_condition:
          type: Ready
        wait_timeout: 60
      retries: 60
