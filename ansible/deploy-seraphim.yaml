---
- name: Run once to set shared variable
  hosts: localhost
  gather_facts: false
  vars:
    id: 64853e11f7a9ba1c4ac21cfd
  tasks:
    - name: Set shared variable from lookup
      ansible.builtin.set_fact:
        amt: "{{ [lookup('infisical.vault.read_secrets', project_id=id, env_slug='prod', path='/amt')] | flatten | items2dict }}"
        hcloud: "{{ [lookup('infisical.vault.read_secrets', project_id=id, env_slug='prod', path='/hcloud')] | flatten | items2dict }}"
        infisical: "{{ [lookup('infisical.vault.read_secrets', project_id=id, env_slug='prod', path='/infisical')] | flatten | items2dict }}"
        omni: "{{ [lookup('infisical.vault.read_secrets', project_id=id, env_slug='prod', path='/omni')] | flatten | items2dict }}"

- name: Provision Cloud Machines
  hosts: localhost
  connection: local
  environment:
    HCLOUD_TOKEN: "{{ hostvars['localhost']['hcloud'].API_TOKEN }}"
  tasks:
    - name: Create Zeus
      hetzner.hcloud.server:
        name: zeus
        server_type: cpx11
        image: "249165353"
        location: ash
        state: started

- name: Get MS-01 machine status
  hosts: ms01
  connection: local
  environment:
    OMNI_ENDPOINT: "{{ hostvars['localhost']['omni'].ENDPOINT }}"
    OMNI_SERVICE_ACCOUNT_KEY: "{{ hostvars['localhost']['omni'].SERVICE_ACCOUNT_KEY }}"
  tasks:
    - name: Get machine status
      ansible.builtin.shell: |
        set -o pipefail
        omnictl get machinestatus -o yaml | yq 'select(.spec.network.hostname == "{{ inventory_hostname | quote }}") | .metadata.phase'
      changed_when: false
      register: cmd

    - name: Set machine status fact
      ansible.builtin.set_fact:
        omni_status: "{{ cmd.stdout }}"

- name: Run PXE server
  hosts: localhost
  connection: local
  vars:
    omni_schematic_id: "{{ hostvars['localhost']['omni'].SCHEMATIC_ID }}"
    omni_kernel_params: "{{ hostvars['localhost']['omni'].KERNEL_PARAMS }}"
    missing_machines: []
  pre_tasks:
    - name: Gather missing machines
      ansible.builtin.set_fact:
        missing_machines: "{{ missing_machines + [item] }}"
      loop: "{{ groups['ms01'] }}"
      when: hostvars[item]['omni_status'] == ''
  roles:
    - role: pxe
      vars:
        pxe_kernel_url: "https://pxe.factory.talos.dev/image/{{ omni_schematic_id }}/{{ talos_version }}/kernel-amd64"
        pxe_initrd_url: "https://pxe.factory.talos.dev/image/{{ omni_schematic_id }}/{{ talos_version }}/initramfs-amd64.xz"
        pxe_kernel_params: "{{ omni_kernel_params }}"
        pxe_subnet: "10.10.22.0/24"
      when: missing_machines | length > 0

- name: Boot MS-01 machines to PXE
  hosts: ms01
  connection: local
  vars:
    amt_username: "{{ hostvars['localhost']['amt'].USERNAME }}"
    amt_password: "{{ hostvars['localhost']['amt'].PASSWORD }}"
  tasks:
    - name: Set hosts to boot from PXE
      ansible.builtin.command: "echo amtcli boot pxe {{ amt_host }} --username {{ amt_username }} --password {{ amt_password }}"
      changed_when: true
      register: cmd
      retries: 5
      until: cmd.rc == 0
      when: omni_status == ''

    - name: Start hosts
      ansible.builtin.command: "echo amtcli on {{ amt_host }} --username {{ amt_username }} --password {{ amt_password }}"
      changed_when: true
      register: cmd
      until: cmd.rc == 0
      when: omni_status == ''

- name: Wait for all machines to be running
  hosts: seraphim
  connection: local
  environment:
    OMNI_ENDPOINT: "{{ hostvars['localhost']['omni'].ENDPOINT }}"
    OMNI_SERVICE_ACCOUNT_KEY: "{{ hostvars['localhost']['omni'].SERVICE_ACCOUNT_KEY }}"
  tasks:
    - name: Check machine status
      ansible.builtin.shell: |
        set -o pipefail
        STATUS=$(omnictl get machinestatus -o yaml | yq 'select(.spec.network.hostname == "{{ inventory_hostname | quote }}") | .metadata.phase')
        if [ "$STATUS" == "running" ]; then
          exit 0
        fi
        exit 1
      changed_when: false
      retries: 25
      register: cmd
      until: cmd.rc == 0

- name: Configure Seraphim
  hosts: localhost
  connection: local
  environment:
    OMNI_ENDPOINT: "{{ hostvars['localhost']['omni'].ENDPOINT }}"
    OMNI_SERVICE_ACCOUNT_KEY: "{{ hostvars['localhost']['omni'].SERVICE_ACCOUNT_KEY }}"
  roles:
    - role: omni
      vars:
        omni_talos_version: "{{ talos_version }}"
        omni_kubernetes_version: "{{ kubernetes_version }}"
        omni_cluster_name: "seraphim"
        omni_infisical_client_id: "{{ hostvars['localhost']['infisical'].SERAPHIM_CLIENT_ID }}"
        omni_infisical_client_secret: "{{ hostvars['localhost']['infisical'].SERAPHIM_CLIENT_SECRET }}"
