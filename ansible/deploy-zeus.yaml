---
- name: Provision zeus
  hosts: localhost
  connection: local
  tasks:
    - name: Create server
      hetzner.hcloud.server:
        name: zeus
        server_type: cpx11
        image: alma-9
        location: ash
        ssh_keys:
          - scarey
        ipv4: zeus
        user_data: |
          #cloud-config
          package_update: true
          users:
            - name: scarey
              groups:
                - wheel
              shell: /bin/bash
              sudo:
                - ALL=(ALL) NOPASSWD:ALL
              ssh_authorized_keys:
                - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIChdQW4k6/5G12/6y68bH0QBeuvL9tb2uVAi/ILzfxCH
          packages:
            - dnf-automatic
            - systemd-resolved
            - haproxy
          runcmd:
            - [ systemctl, enable, --now, dnf-automatic.timer ]
            - [ systemctl, enable, --now, systemd-resolved.service ]
            - [ systemctl, enable, --now, haproxy.service ]
        state: started
      register: zeus

    - name: Wait for SSH to be available
      ansible.builtin.wait_for:
        port: 22
        host: "{{ zeus.hcloud_server.ipv4_address }}"
        delay: 5
      connection: local

- name: Configure zeus
  hosts: zeus
  become: true
  roles:
    - role: githubixx.ansible_role_wireguard
  tasks:
    - name: Set DNS nameservers
      ansible.builtin.blockinfile:
        path: /etc/resolv.conf
        block: |
          nameserver {{ wireguard_dns }}

    - name: Configure haproxy
      ansible.builtin.copy:
        dest: /etc/haproxy/haproxy.cfg
        mode: "0644"
        content: |
          global
            log         127.0.0.1 local2

            chroot      /var/lib/haproxy
            pidfile     /var/run/haproxy.pid
            maxconn     4000
            user        haproxy
            group       haproxy
            daemon

            stats socket /var/lib/haproxy/stats

            ssl-default-bind-ciphers PROFILE=SYSTEM
            ssl-default-server-ciphers PROFILE=SYSTEM

          defaults
            mode                    tcp
            log                     global
            option                  httplog
            option                  dontlognull
            option http-server-close
            option forwardfor       except 127.0.0.0/8
            option                  redispatch
            option                  tcplog
            retries                 3
            timeout http-request    10s
            timeout queue           1m
            timeout connect         10s
            timeout client          1m
            timeout server          1m
            timeout http-keep-alive 10s
            timeout check           10s
            maxconn                 3000

          frontend main
            bind *:443
            mode tcp
            default_backend seraphim

          backend seraphim
            mode tcp
            server seraphim 10.10.21.12:443

    - name: Reload haproxy
      ansible.builtin.service:
        name: haproxy
        state: reloaded
