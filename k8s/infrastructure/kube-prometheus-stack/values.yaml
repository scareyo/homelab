---
grafana:
  grafana.ini:
    server:
      root_url: https://grafana.apps.int.scarey.me
 #   auth.generic_oauth:
 #     enabled: true
 #     client_id: $__file{/etc/secrets/oauth/client_id}
 #     client_secret: $__file{/etc/secrets/oauth/client_secret}
 #     scopes: openid email profile offline_access roles
 #     email_attribute_path: email
 #     login_attribute_path: username
 #     name_attribute_path: full_name
 #     auth_url: https://sso.scarey.me/application/o/authorize/
 #     token_url: https://sso.scarey.me/application/o/token/
 #     api_url: https://sso.scarey.me/application/o/userinfo/
 #     role_attribute_path: "contains(groups, 'grafana-admin') && 'Admin' || contains(groups, 'grafana-editor') && 'Editor' || 'Viewer'"
 #     allow_assign_grafana_admin: true
 # extraSecretMounts:
 #   - name: oauth
 #     secretName: oauth
 #     defaultMode: 0440
 #     mountPath: /etc/secrets/oauth
 #     readOnly: true
  route:
    main:
      enabled: true
      hostnames:
        - "grafana.apps.int.scarey.me"
      parentRefs:
        - name: internal
          namespace: gateway
      matches:
        - path:
            type: PathPrefix
            value: /
  additionalDataSources:
   - name: loki
     type: loki
     url: http://loki-gateway.monitoring
prometheus:
  route:
    main:
      enabled: true
      hostnames:
        - "prometheus.apps.int.scarey.me"
      parentRefs:
        - name: internal
          namespace: gateway
      matches:
        - path:
            type: PathPrefix
            value: /
alertmanager:
  route:
    main:
      enabled: true
      hostnames:
        - "alertmanager.apps.int.scarey.me"
      parentRefs:
        - name: internal
          namespace: gateway
      matches:
        - path:
            type: PathPrefix
            value: /
kubeControllerManager:
  enabled: false
kubeScheduler:
  enabled: false
defaultRules:
  rules:
    kubeProxy: false
